; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "iSCert Hub"
#define MyAppVersion "1.1"
#define MyAppPublisher "ISA"
#define MyAppURL "http://www.isa.com.uy/"
#define MyAppExeName "iSCertHubLauncher.exe"

[Setup]
CloseApplications=force
PrivilegesRequired=admin
ChangesEnvironment=yes
ArchitecturesInstallIn64BitMode=x64
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{558FBDE0-1C8C-4F22-A1E3-671AA87DBBF2}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={sd}\{#MyAppName}
DisableProgramGroupPage=yes
DisableDirPage=yes
;LicenseFile=COPYING.TXT
OutputDir=../ext/dist/
OutputBaseFilename=iSCertHubInstallerFull
SetupIconFile=..\ext\l4j\iscert.ico
Compression=lzma
SolidCompression=yes

[Languages]
;Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

;[CustomMessages]
;AppAddPath=Add application directory to your environmental path (required)

;[Tasks]
;Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
;Name: modifypath; Description:{cm:AppAddPath};   
[Dirs]    
Name: "{app}\jre"  
Name: "{app}\lib" 
Name: "{app}\cert"   
Name: "{app}\config"
Name: "{tmp}\fox"
Name: "{tmp}\license"
Name: "{tmp}\license\cert"
[Files]  
;Source: "..\ext\"; DestDir: "{app}"; Excludes:"*"; Flags: ignoreversion   
;Source: "manager.isc"; DestDir: "{app}"; Flags: ignoreversion           
Source: "..\ext\bin\hub.isc"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ext\bin\iSCertHubLauncher.exe"; DestDir: "{app}"; Flags: ignoreversion    
;Source: "keystore-config.properties"; DestDir: "{app}"; Flags: ignoreversion
;Source: "trustedx-demos.pfx"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\ext\jks\isa\127.0.0.1.jks"; DestDir: "{app}"; Flags: ignoreversion

Source: "..\ext\jre\x64\jre\*"; DestDir: "{app}\jre\"; Flags: recursesubdirs ignoreversion; Check: IsWin64;


Source: "..\ext\jre\x86\jre\*"; DestDir: "{app}\jre\"; Flags: recursesubdirs ignoreversion; Check: "not IsWin64";

Source: "..\ext\lib\*"; DestDir: "{app}\lib\"; Flags: ignoreversion

Source: "..\ext\cert\isa\*"; DestDir: "{app}\cert\"; Flags: ignoreversion

Source: "..\ext\license\cert\license.crt"; DestDir: "{app}\license\cert\"; Flags: ignoreversion
Source: "..\ext\config\*"; DestDir: "{app}\config\"; Flags: ignoreversion 
Source: "..\ext\fox\*"; DestDir: "{tmp}\fox\"; Flags: ignoreversion

;EN ESTA LINEA ENVIA TODAS LAS LIBRERIAS DLL A LA CARPETA DE SYSWOW64 Y LAS REGISTRA, ES PARA CUANDO 
;EL SISTEMA OPERATIVO SEA DE 64 BITS         
Source: "..\ext\system\x64\*.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist regserver 64bit noregerror; Check: IsWin64
Source: "..\ext\system\x86\*.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist; Check: "not IsWin64"
[Registry]
Root: HKCR; Subkey: "iscert"; ValueType: string; ValueName: ; ValueData: "URL:iscert"; Flags: createvalueifdoesntexist
Root: HKCR; Subkey: "iscert"; ValueType: string; ValueName: "URL Protocol"; ValueData: ; Flags: createvalueifdoesntexist
Root: HKCR; Subkey: "iscert\shell"; Flags: createvalueifdoesntexist
Root: HKCR; Subkey: "iscert\shell\open"; Flags: createvalueifdoesntexist
Root: HKCR; Subkey: "iscert\shell\open\command"; Flags: createvalueifdoesntexist  
Root: HKCR; Subkey: "iscert\shell\open\command"; ValueType: string; ValueName: ; ValueData: "{app}\iSCertHubLauncher.exe"; Flags: createvalueifdoesntexist
;Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"


[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
;Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{commonstartup}\iSCertHub"; Filename: "{app}\iSCertHubLauncher.exe"




[Run]      
Filename: "certutil.exe" ; Parameters:"-addstore -f Root ""{app}\cert\ca_isa.crt"""; Flags: runascurrentuser runhidden  
Filename: "certutil.exe" ; Parameters:"-addstore -f AddressBook ""{app}\cert\ssl_app.crt"""; Flags: runascurrentuser runhidden
;Filename: "{app}\foxutil.exe" ; Parameters:"-addstore -f AddressBook ""{app}\cert\ssl_app.crt"""; Flags: runascurrentuser runhidden
;Filename: "certutil.exe" ; Parameters:"-importPFX -f -p isa123 ""{app}\cert\127.0.0.1.pfx"""; Flags: runascurrentuser runhidden
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: postinstall runhidden  
Filename: "{tmp}\fox\installFox.bat" ; Parameters:"isa123"; Flags: runascurrentuser runhidden 
[UninstallRun]
Filename: "wmic"; Parameters: "process where ""commandline like '''%HubLauncher%'''"" delete"; Flags: runascurrentuser runhidden
Filename: "wmic"; Parameters: "process where ""commandline like ''%.isc%''"" delete"; Flags: runascurrentuser runhidden

 
[Code]

const LICENSE_PATH = 'C:\iSCert Hub\license\';
const LICENSE_DEST = LICENSE_PATH + 'default.license';

var
	Page: TInputFileWizardPage;
	
procedure RegisterExtraCloseApplicationsResources;
begin
  RegisterExtraCloseApplicationsResource(false,'C:\Program Files (x86)\Mozilla Firefox\firefox.exe');
  RegisterExtraCloseApplicationsResource(false,'C:\Program Files\Mozilla Firefox\firefox.exe');
end; 

function CreateLicensePage() : Integer;

begin 
	Page := CreateInputFilePage(wpInstalling, 
								'Seleccione una licencia para el iSCert Hub', 
								'Busque su licencia', 
								'Busque el archivo de licencia que le fue provisto, y haga click en siguiente.');
		
	Result := Page.ID;
	Page.add('Ubicacion de la licencia',
		'Archivos de licencia|*.license',
		'.license');
end;

procedure InitializeWizard();
begin 
	CreateLicensePage();
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
	LicensePath: String;
	i: Integer;
begin
	Result := true
	if CurPageID = Page.ID then
	begin 	
		if Length(Page.Edits[0].Text) > 0 then
		begin
			LicensePath := Page.Values[0];	
			if not FileCopy(LicensePath, LICENSE_DEST , true) then
			begin
				i := 1;
				while not RenameFile(LICENSE_DEST, LICENSE_PATH + 'old' + IntToStr(i) + '.license') do
				begin		
					i := i + 1;
				end;
				if not FileCopy(LicensePath, LICENSE_DEST , false) then
				begin
					MsgBox('No se pudo cargar la licencia, puede que el iSCert Hub presente problemas.', mbInformation, MB_OK);
				end;
			end;
			Result := true
		end 
		else
		begin
			Result := MsgBox('Puede que el iSCert Hub presente problemas sin una licencia ¿estas seguro que quieres continuar?', mbConfirmation, MB_YESNO or MB_DEFBUTTON2) = IDYES;
		end;
	end;
end;
